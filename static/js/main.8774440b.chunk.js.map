{"version":3,"sources":["components/Navbar.tsx","stores/store.ts","contexts/StoreContext.ts","hooks/useStore.ts","components/TodoForm.tsx","hooks/useInput.ts","item-types/item-types.ts","components/Card.tsx","hooks/useCardMoving.ts","components/TodoList.tsx","pages/TodosPage.tsx","hooks/useTodosPreserve.ts","pages/AboutPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","href","to","Store","todos","title","todo","id","Date","now","completed","filter","map","makeAutoObservable","this","store","StoreContext","createContext","useStore","useContext","TodoForm","inp","handleAdd","initial","useState","value","setValue","onKeyPress","event","key","onChange","target","useInput","type","placeholder","htmlFor","ItemTypes","Card","index","onToggle","onRemove","moveCard","setTodos","useCallback","dragIndex","hoverIndex","dragCard","newTodos","splice","useCardMoving","ref","useRef","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","item","current","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","isDragging","drag","push","opacity","join","style","data-handler-id","checked","onClick","TodoList","length","TodosPage","observer","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","useTodosPreserve","AboutPage","App","DndProvider","backend","HTML5Backend","Provider","component","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8774440b.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar: FC = () => (\r\n    <nav>\r\n      <div className=\"nav-wrapper px1\">\r\n        <a href=\"/\" className=\"brand-logo\">React + TS</a>\r\n        <ul className=\"right hide-on-med-and-down\">\r\n          <li><NavLink to=\"/\">To Do</NavLink></li>\r\n          <li><NavLink to=\"/about\">Information</NavLink></li>\r\n          <li><NavLink to=\"/test\">Test</NavLink></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n);","import { makeAutoObservable } from \"mobx\";\r\n\r\nimport { ITodo } from \"@interfaces/interfaces\";\r\n\r\nclass Store {\r\n  todos: ITodo[] = [];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  setTodos = (todos: ITodo[]) => {\r\n    this.todos = todos\r\n  };\r\n\r\n  handleAdd = (title: string) => {\r\n    const todo: ITodo = {\r\n      id: Date.now(),\r\n      title,\r\n      completed: false\r\n    };\r\n\r\n    this.todos = [\r\n      todo,\r\n      ...this.todos\r\n    ];\r\n  };\r\n\r\n  onRemove = (id: number) => {\r\n    this.todos = this.todos.filter(todo => {\r\n      return todo.id !== id;\r\n    });\r\n  };\r\n\r\n  onToggle = (id: number) => {\r\n    this.todos = this.todos.map(todo => {\r\n      return todo.id !== id ? todo :\r\n          {\r\n            ...todo,\r\n            completed: !todo.completed\r\n          };\r\n    });\r\n  };\r\n}\r\n\r\nexport default Store;","import Store from \"@stores/store\";\r\n\r\nimport {createContext} from \"react\";\r\n\r\nconst store = new Store()\r\n\r\nexport const StoreContext = createContext(store);","import { useContext } from \"react\";\r\n\r\nimport { StoreContext} from \"@contexts/StoreContext\";\r\n\r\nexport const useStore = () => useContext(StoreContext);","import React, { FC } from 'react';\r\n\r\nimport { useInput } from \"@hooks/useInput\";\r\n\r\nimport { useStore } from \"@hooks/useStore\";\r\n\r\nconst TodoForm: FC = () => {\r\n    const { handleAdd } = useStore();\r\n\r\n    const inp = useInput(handleAdd);\r\n\r\n    return (\r\n        <div className=\"input-field mt5\">\r\n            <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                placeholder=\"Title\"\r\n                {...inp}\r\n            />\r\n            <label htmlFor=\"title\" className=\"active\">Enter title</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\n\r\nexport const useInput = (handleAdd: Function, initial: string = \"\") => {\r\n  const [value, setValue] = useState(initial);\r\n\r\n  const onKeyPress = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter') {\r\n      handleAdd(value);\r\n      setValue(() => \"\");\r\n    }\r\n  };\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement> ) => {\r\n    setValue(() => event.target.value);\r\n  }\r\n\r\n  return {\r\n    value,\r\n    onKeyPress,\r\n    onChange\r\n  }\r\n}","export const ItemTypes = {\r\n  CARD: 'card'\r\n}","import React, { FC, useRef } from 'react';\r\n\r\nimport { useStore } from \"@hooks/useStore\";\r\n\r\nimport { useDrag, useDrop, DropTargetMonitor } from \"react-dnd\";\r\n\r\nimport { ItemTypes } from \"@item-types/item-types\";\r\n\r\nimport { XYCoord } from \"dnd-core\";\r\nimport {useCardMoving} from \"@hooks/useCardMoving\";\r\n\r\ninterface CardProps {\r\n  id: number,\r\n  title: string,\r\n  completed: boolean,\r\n  index: number,\r\n}\r\n\r\ninterface DragItem {\r\n  index: number,\r\n  id: string,\r\n  type: string\r\n}\r\n\r\nconst Card: FC<CardProps> = ({ id, title, completed, index }) => {\r\n  const {\r\n    onToggle,\r\n    onRemove\r\n  } = useStore();\r\n\r\n  const className = ['todo'];\r\n\r\n  const moveCard = useCardMoving();\r\n\r\n  const ref = useRef<HTMLLIElement>(null);\r\n\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId()\r\n      };\r\n    },\r\n    hover(item: DragItem, monitor: DropTargetMonitor) {\r\n      if (!ref.current) {\r\n        return\r\n      }\r\n\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n\r\n      const hoverMiddleY =\r\n          (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n\r\n      const clientOffset = monitor.getClientOffset()\r\n\r\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\r\n\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n\r\n      moveCard(dragIndex, hoverIndex);\r\n\r\n      item.index = hoverIndex;\r\n    }\r\n  });\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: ItemTypes.CARD,\r\n    item: () => {\r\n      return { id, index }\r\n    },\r\n    collect: (monitor: any) => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  if (completed) {\r\n    className.push('completed')\r\n  }\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  drag(drop(ref));\r\n\r\n  return (\r\n      <li\r\n          ref={ref}\r\n          className={className.join(' ')}\r\n          key={id}\r\n          style={{ opacity }}\r\n          data-handler-id={handlerId}\r\n      >\r\n        <label>\r\n          <input\r\n              type=\"checkbox\"\r\n              checked={completed}\r\n              onChange={() => onToggle(id)}\r\n          />\r\n          <span>{title}</span>\r\n          <i\r\n              className=\"material-icons red-text\"\r\n              onClick={() => onRemove(id)}\r\n          >\r\n            delete\r\n          </i>\r\n        </label>\r\n      </li>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useCallback } from \"react\";\r\nimport { useStore } from \"@hooks/useStore\";\r\n\r\nexport const useCardMoving = () => {\r\n  const {\r\n    todos,\r\n    setTodos\r\n  } = useStore()\r\n\r\n  const moveCard = useCallback(\r\n      (dragIndex: number, hoverIndex: number) => {\r\n        const dragCard = todos[dragIndex];\r\n\r\n        const newTodos = [\r\n          ...todos\r\n        ];\r\n\r\n        newTodos.splice(dragIndex, 1);\r\n        newTodos.splice(hoverIndex, 0, dragCard);\r\n\r\n        setTodos(newTodos)\r\n      },\r\n      [todos, setTodos],\r\n  );\r\n\r\n  return moveCard;\r\n}","import React, { FC } from \"react\";\r\n\r\nimport { useStore } from \"@hooks/useStore\";\r\nimport Card from \"@components/Card\";\r\n\r\nconst TodoList: FC = () => {\r\n  const {\r\n    todos\r\n  } = useStore();\r\n\r\n  if (!todos.length) {\r\n    return <p className=\"center\">There is empty!</p>\r\n  }\r\n\r\n  return (\r\n      <ul>\r\n        {todos.map((todo, index) => {\r\n          return (\r\n              <Card\r\n                  key={todo.id}\r\n                  id={todo.id}\r\n                  title={todo.title}\r\n                  completed={todo.completed}\r\n                  index={index}\r\n              />\r\n          );\r\n        })}\r\n      </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import React, { FC } from 'react';\r\n\r\nimport TodoForm from \"@components/TodoForm\";\r\n\r\nimport TodoList from \"@components/TodoList\";\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { useTodosPreserve } from \"@hooks/useTodosPreserve\";\r\n\r\nimport { useStore } from \"@hooks/useStore\";\r\n\r\nconst TodosPage: FC = observer(() => {\r\n      const store = useStore();\r\n\r\n      useTodosPreserve(store);\r\n\r\n      return (\r\n          <>\r\n            <TodoForm/>\r\n            <TodoList/>\r\n          </>\r\n      );\r\n    }\r\n)\r\n\r\nexport default TodosPage;","import { useEffect } from \"react\";\r\n\r\nimport Store from \"@stores/store\";\r\nimport { ITodo } from \"@interfaces/interfaces\";\r\n\r\nexport const useTodosPreserve = (store: Store) => {\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem(\"todos\") || '[]') as ITodo[];\r\n\r\n    store.setTodos(saved);\r\n  }, [store]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(store.todos));\r\n  }, [store.todos]);\r\n}","import React from 'react';\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const AboutPage: React.FC = () => {\r\n  return (\r\n      <>\r\n        <h1>About Page</h1>\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad adipisci aliquid aspernatur eaque magni\r\n          maxime minima odio officia reiciendis similique?\r\n        </p>\r\n        <NavLink to={\"/\"}>\r\n          <button className=\"btn\">Go back!</button>\r\n        </NavLink>\r\n      </>\r\n  );\r\n};","import React from 'react';\n\nimport { Navbar } from \"components/Navbar\";\n\nimport './App.css';\n\nimport TodosPage from \"pages/TodosPage\";\n\nimport { AboutPage } from \"pages/AboutPage\";\n\nimport { DndProvider } from \"react-dnd\"\n\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nimport Store from \"stores/store\";\n\nimport { StoreContext } from \"contexts/StoreContext\";\n\nconst store = new Store();\n\nconst App: React.FC = () => {\n  return (\n      <BrowserRouter>\n        <Navbar/>\n        <DndProvider backend={HTML5Backend}>\n          <div className=\"container\">\n            <StoreContext.Provider value={store}>\n              <Switch>\n                <Route component={TodosPage} path=\"/\" exact/>\n                <Route component={AboutPage} path=\"/about\"/>\n              </Switch>\n            </StoreContext.Provider>\n          </div>\n        </DndProvider>\n      </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}