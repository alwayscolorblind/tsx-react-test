{"version":3,"sources":["components/Navbar.tsx","hooks/useStore.ts","components/TodoForm.tsx","hooks/useInput.ts","components/TodoList.tsx","pages/TodosPage.tsx","hooks/useLocalStorage.ts","pages/AboutPage.tsx","App.tsx","stores/store.ts","index.tsx"],"names":["Navbar","className","href","to","useStore","useContext","StoreContext","TodoForm","inp","handleAdd","initial","useState","value","setValue","onKeyPress","event","key","onChange","target","useInput","type","id","placeholder","htmlFor","TodoList","todos","onToggle","onRemove","length","map","todo","completed","push","join","checked","title","onClick","TodosPage","observer","store","useEffect","saved","JSON","parse","localStorage","getItem","setTodos","setItem","stringify","useLocalStorage","AboutPage","history","useHistory","Date","now","filter","makeAutoObservable","this","createContext","App","Provider","component","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab0bfddd.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar: FC = () => (\r\n    <nav>\r\n      <div className=\"nav-wrapper px1\">\r\n        <a href=\"/\" className=\"brand-logo\">React + TS</a>\r\n        <ul className=\"right hide-on-med-and-down\">\r\n          <li><NavLink to=\"/\">To Do</NavLink></li>\r\n          <li><NavLink to=\"/about\">Information</NavLink></li>\r\n          <li><NavLink to=\"/test\">Test</NavLink></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n);","import { useContext } from \"react\";\r\n\r\nimport { StoreContext } from \"../App\";\r\n\r\nexport const useStore = () => useContext(StoreContext);","import React, { FC } from 'react';\r\n\r\nimport { useInput } from \"../hooks/useInput\";\r\n\r\nimport { useStore } from \"../hooks/useStore\";\r\n\r\nconst TodoForm: FC = () => {\r\n    const { handleAdd } = useStore();\r\n\r\n    const inp = useInput(handleAdd);\r\n\r\n    return (\r\n        <div className=\"input-field mt5\">\r\n            <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                placeholder=\"Title\"\r\n                {...inp}\r\n            />\r\n            <label htmlFor=\"title\" className=\"active\">Enter title</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\n\r\nexport const useInput = (handleAdd: Function, initial: string = \"\") => {\r\n  const [value, setValue] = useState(initial);\r\n\r\n  const onKeyPress = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter') {\r\n      handleAdd(value);\r\n      setValue(() => \"\");\r\n    }\r\n  };\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement> ) => {\r\n    setValue(() => event.target.value);\r\n  }\r\n\r\n  return {\r\n    value,\r\n    onKeyPress,\r\n    onChange\r\n  }\r\n}","import React, { FC } from \"react\";\r\n\r\nimport { useStore } from \"../hooks/useStore\";\r\n\r\nconst TodoList: FC = () => {\r\n  const {\r\n    todos,\r\n    onToggle,\r\n    onRemove\r\n  } = useStore();\r\n\r\n  if (!todos.length) {\r\n    return <p className=\"center\">There is empty!</p>\r\n  }\r\n\r\n  return (\r\n      <ul>\r\n        {todos.map(todo => {\r\n          const className = ['todo'];\r\n\r\n          if (todo.completed) {\r\n            className.push('completed')\r\n          }\r\n\r\n          return (\r\n              <li className={className.join(' ')} key={todo.id}>\r\n                <label>\r\n                  <input\r\n                      type=\"checkbox\"\r\n                      checked={todo.completed}\r\n                      onChange={() => onToggle(todo.id)}\r\n                  />\r\n                  <span>{todo.title}</span>\r\n                  <i\r\n                      className=\"material-icons red-text\"\r\n                      onClick={() => onRemove(todo.id)}\r\n                  >\r\n                    delete\r\n                  </i>\r\n                </label>\r\n              </li>\r\n          );\r\n        })}\r\n      </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import React, { FC } from 'react';\r\n\r\nimport TodoForm from \"../components/TodoForm\";\r\n\r\nimport TodoList from \"../components/TodoList\";\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\n\r\nimport { useStore } from \"../hooks/useStore\";\r\n\r\nconst TodosPage: FC = observer(() => {\r\n      const store = useStore();\r\n\r\n      useLocalStorage(store);\r\n\r\n      return (\r\n          <>\r\n            <TodoForm/>\r\n            <TodoList/>\r\n          </>\r\n      );\r\n    }\r\n)\r\n\r\nexport default TodosPage;","import { useEffect } from \"react\";\r\n\r\nimport Store from \"../stores/store\";\r\nimport { ITodo } from \"../interfaces/interfaces\";\r\n\r\nexport const useLocalStorage = (store: Store) => {\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem(\"todos\") || '[]') as ITodo[];\r\n\r\n    store.setTodos(saved);\r\n  }, [store]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(store.todos));\r\n  }, [store.todos]);\r\n}","import React from 'react';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const AboutPage: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <h1>About Page</h1>\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad adipisci aliquid aspernatur eaque magni\r\n          maxime minima odio officia reiciendis similique?\r\n        </p>\r\n        <button className=\"btn\" onClick={handleClick}>Go back!</button>\r\n      </>\r\n  );\r\n};","import React, { createContext } from 'react';\n\nimport { Navbar } from \"./components/Navbar\";\n\nimport './App.css';\n\nimport TodosPage from \"./pages/TodosPage\";\n\nimport { AboutPage } from \"./pages/AboutPage\";\n\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nimport Store from \"./stores/store\";\n\nconst store = new Store();\n\nexport const StoreContext = createContext(store);\n\nconst App: React.FC = () => {\n  return (\n      <BrowserRouter>\n        <Navbar/>\n        <div className=\"container\">\n          <StoreContext.Provider value={store}>\n            <Switch>\n              <Route component={TodosPage} path=\"/\" exact/>\n              <Route component={AboutPage} path=\"/about\"/>\n            </Switch>\n          </StoreContext.Provider>\n        </div>\n      </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nimport { ITodo } from \"../interfaces/interfaces\";\r\n\r\nclass Store {\r\n  todos: ITodo[] = [];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  setTodos = (todos: ITodo[]) => {\r\n    this.todos = todos\r\n  };\r\n\r\n  handleAdd = (title: string) => {\r\n    const todo: ITodo = {\r\n      id: Date.now(),\r\n      title,\r\n      completed: false\r\n    };\r\n\r\n    this.todos = [\r\n      todo,\r\n      ...this.todos\r\n    ];\r\n  };\r\n\r\n  onRemove = (id: number) => {\r\n    this.todos = this.todos.filter(todo => {\r\n      return todo.id !== id;\r\n    });\r\n  };\r\n\r\n  onToggle = (id: number) => {\r\n    this.todos = this.todos.map(todo => {\r\n      return todo.id !== id ? todo :\r\n          {\r\n            ...todo,\r\n            completed: !todo.completed\r\n          };\r\n    });\r\n  };\r\n}\r\n\r\nexport default Store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}